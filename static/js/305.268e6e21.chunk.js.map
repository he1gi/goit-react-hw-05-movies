{"version":3,"file":"static/js/305.268e6e21.chunk.js","mappings":"sRAEMA,EAAU,mCACVC,EAAW,gCAEV,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,sCACyCD,IAC7CI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASC,EAAYC,GAC1B,OAAON,EAAAA,EAAAA,IAAA,UAEAF,EAFA,gCAEgCD,EAFhC,iCAEgES,EAFhE,gCAIJL,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBU,EADpB,oBACuCX,EADvC,oBAEJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GACV,CAEM,SAASM,EAAgBD,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,oBAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKO,IAAX,GACV,CAEM,SAASC,EAAgBH,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,2BAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,C,mJCpCYQ,EAAUC,EAAAA,EAAAA,IAAH,0CAIPC,EAAcD,EAAAA,EAAAA,IAAH,0DAKXE,EAAaF,EAAAA,EAAAA,IAAH,yCAIVG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mT,SCPR,SAASK,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QAC9BC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,SAAUC,EAAyBJ,EAAzBI,OAAQC,EAAiBL,EAAjBK,aACxCC,EACa,IAAjBD,EAAA,WAAwC,GAAfA,GAAmBE,QAAQ,GAApD,MAA6D,KAE/D,OACE,+BACE,UAACd,EAAD,YACE,0BACE,SAACG,EAAD,CACEY,IAAG,6CAAwCP,GAC3CQ,IAAKP,OAGT,UAACP,EAAD,YAEE,SAACE,EAAD,CAAYa,GAAG,UAAf,sBACA,SAACb,EAAD,CAAYa,GAAG,OAAf,mBACA,SAACb,EAAD,CAAYa,GAAG,UAAf,sBACA,wBAAKR,GAAS,oBACd,qCAAaI,GAAa,qBAC1B,wCACA,uBAAIH,GAAY,oBAChB,qCACCC,GACCA,EAAOO,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAChB,OAAO,uBAAaA,GAALD,EAChB,WAKZ,CClCc,SAASE,IACtB,IAAQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QACR,GAA8B2B,EAAAA,EAAAA,UAAS,IAAvC,eAAOhB,EAAP,KAAgBiB,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,IAAgBC,GAASP,KAAKmC,EAC/B,GAAE,CAAC5B,KAGF,2BACGW,IAAW,SAACD,EAAD,CAAeC,QAASA,KACpC,SAAC,EAAAmB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/api.js","components/MovieOverview/MovieOverview.styled.jsx","components/MovieOverview/MovieOverview.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '126685e3c97a05ce8ea69747c86f816b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport function getTranding() {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n}\n\nexport function searchMovie(query) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r.data.cast);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 15px;\n  width: 100%;\n`;\n\nexport const ImgWrapper = styled.img`\n  width: 701px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  transition: all 0.5s;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  &:hover {\n    color: white;\n    background-color: #29a7f0;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  TextWrapper,\n  ImgWrapper,\n  StyledLink,\n} from './MovieOverview.styled';\n\nexport default function MovieOverview({ details }) {\n  const { poster_path, title, overview, genres, vote_average } = details;\n  const fixedVote =\n    vote_average !== 0 ? `${(vote_average * 10).toFixed(1)} %` : null;\n\n  return (\n    <>\n      <Wrapper>\n        <div>\n          <ImgWrapper\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={title}\n          />\n        </div>\n        <TextWrapper>\n          {/* <StyledLink to=\"/\">Go back</StyledLink> */}\n          <StyledLink to=\"/movies\">Go back</StyledLink>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n          <h1>{title || 'No information'}</h1>\n          <h2>Score : {fixedVote || 'No information'}</h2>\n          <h2>Overview :</h2>\n          <p>{overview || 'No information'}</p>\n          <h2>Genres :</h2>\n          {genres &&\n            genres.map(({ id, name }) => {\n              return <p key={id}>{name}</p>;\n            })}\n        </TextWrapper>\n      </Wrapper>\n    </>\n  );\n}\n\nMovieOverview.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      vote_average: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      overview: PropTypes.string,\n      poster_path: PropTypes.none,\n      ganres: PropTypes.none,\n    })\n  ),\n};\n","import { Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api/api';\n\nimport MovieOverview from 'components/MovieOverview';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setDetails);\n  }, [movieId]);\n\n  return (\n    <div>\n      {details && <MovieOverview details={details} />}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["API_KEY","BASE_URL","getTranding","axios","then","r","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Wrapper","styled","TextWrapper","ImgWrapper","StyledLink","NavLink","MovieOverview","details","poster_path","title","overview","genres","vote_average","fixedVote","toFixed","src","alt","to","map","id","name","MovieDetails","useParams","useState","setDetails","useEffect","Suspense","fallback"],"sourceRoot":""}