{"version":3,"file":"static/js/962.d4b8b1f9.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.jsx","components/SeachBox/SearchBox.styled.jsx","components/SeachBox/SearchBox.jsx","pages/Movies/Movies.jsx","pages/pages.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '126685e3c97a05ce8ea69747c86f816b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport function getTranding() {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n}\n\nexport function searchMovie(query) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r.data.cast);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n}\n","import { Circles } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <div className=\"loader\">\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        wrapperClassName=\"loader\"\n        visible={true}\n      />\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const InputWrapper = styled.div`\n  text-align: center;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  height: 25px;\n  color: #000;\n\n  outline: 0;\n\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Input, InputWrapper } from './SearchBox.styled';\n\nexport default function SeacrhBox({ value, onChange }) {\n  return (\n    <InputWrapper>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </InputWrapper>\n  );\n}\n\nSeacrhBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useMemo, Suspense } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport SeachBox from 'components/SeachBox';\nimport { searchMovie } from 'api/api';\nimport { List, Img } from '../pages.styled';\n\nimport Loader from 'components/Loader';\n\nconst KEY = 'query';\n\nexport default function Movie() {\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query') ?? window.localStorage.getItem(KEY);\n\n  useEffect(() => {\n    if (query) {\n      window.localStorage.setItem(KEY, query);\n      setIsLoading(true);\n\n      searchMovie(query)\n        .then(setMovie)\n        .catch(e => {\n          setError(e.message);\n          if (error !== null) {\n            toast.error(`Ошибка ${error}`, {\n              autoClose: 1000,\n            });\n          }\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [query, error]);\n\n  const changeFilter = value => {\n    setSearchParams({ query: value });\n  };\n\n  const chosenMovie = useMemo(() => {\n    return movie.filter(({ title }) =>\n      title.toLowerCase().includes(query.toLowerCase())\n    );\n  }, [movie, query]);\n\n  return (\n    <>\n      <ToastContainer />\n      <SeachBox value={query} onChange={changeFilter} />\n      <Suspense fallback={<div>Loading...</div>}>\n        {query && (\n          <List>\n            {chosenMovie.map(({ title, id, poster_path }) => (\n              <li key={id}>\n                <Link to={`${id}`}>\n                  <div>\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                      alt={title}\n                    />\n                  </div>\n                  <div>\n                    <h2>{title}</h2>\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </List>\n        )}\n        {isLoading && <Loader />}\n      </Suspense>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 290px);\n  justify-content: center;\n  gap: 13px;\n`;\n\nexport const Img = styled.img`\n  transition: transform 0.5s;\n  width: 290px;\n  height: 435px;\n\n  &:hover {\n    transform: scale(0.95);\n  }\n`;\n"],"names":["API_KEY","BASE_URL","getTranding","axios","then","r","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Loader","className","height","width","color","wrapperStyle","wrapperClass","wrapperClassName","visible","InputWrapper","styled","Input","SeacrhBox","value","onChange","type","e","target","KEY","Movie","useState","movie","setMovie","useSearchParams","searchParams","setSearchParams","error","setError","isLoading","setIsLoading","get","window","localStorage","getItem","useEffect","setItem","catch","message","toast","autoClose","finally","chosenMovie","useMemo","filter","title","toLowerCase","includes","Suspense","fallback","map","id","poster_path","to","src","alt","List","Img"],"sourceRoot":""}