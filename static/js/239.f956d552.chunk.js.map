{"version":3,"file":"static/js/239.f956d552.chunk.js","mappings":"sRAEMA,EAAU,mCACVC,EAAW,gCAEV,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,sCACyCD,IAC7CI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASC,EAAYC,GAC1B,OAAON,EAAAA,EAAAA,IAAA,UAEAF,EAFA,gCAEgCD,EAFhC,iCAEgES,EAFhE,gCAIJL,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBU,EADpB,oBACuCX,EADvC,oBAEJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GACV,CAEM,SAASM,EAAgBD,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,oBAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKO,IAAX,GACV,CAEM,SAASC,EAAgBH,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,2BAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,C,8ECrCc,SAASQ,IACtB,OACE,gBAAKC,UAAU,SAAf,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,iBAAiB,SACjBC,SAAS,KAIhB,C,6ICdYC,E,OAAMC,EAAAA,IAAH,2I,SCGD,SAASC,EAAT,GACb,OADiD,EAAVC,OACzBC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC9B,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,WACE,0BACE,SAACL,EAAD,CACES,IAAG,yCAAoCF,GACvCG,IAAKJ,OAGT,0BACE,wBAAKA,UATFD,EAcZ,GACF,C,wBCdc,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbvC,EAAAA,EAAAA,MACGE,MAAK,SAAAC,GACJgC,GAAU,OAAIhC,GACf,IACAsC,OAAM,SAAAC,GACLL,EAASK,EAAEC,SACG,OAAVP,GACFQ,EAAAA,GAAAA,MAAA,+CAAsBR,GAAS,CAC7BS,UAAW,KAGhB,IACAC,SAAQ,kBAAMP,GAAa,EAAnB,GACZ,GAAE,CAACH,KAGF,+BACE,UAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,WACE,SAAC,KAAD,IACCV,IAAa,SAACzB,EAAA,EAAD,KACd,4CACA,SAAC,IAAD,WACE,SAACW,EAAD,CAAgBC,OAAQA,UAKjC,C,wGC1CYwB,EAAO1B,EAAAA,EAAAA,GAAH,uIAOJD,EAAMC,EAAAA,EAAAA,IAAH,0I","sources":["api/api.js","components/Loader/Loader.jsx","components/TrandingMovies/TradingMovies.styled.jsx","components/TrandingMovies/TrandingMovies.jsx","pages/Home/Home.jsx","pages/pages.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '126685e3c97a05ce8ea69747c86f816b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport function getTranding() {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n}\n\nexport function searchMovie(query) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r.data.cast);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n}\n","import { Circles } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <div className=\"loader\">\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        wrapperClassName=\"loader\"\n        visible={true}\n      />\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  transition: transform 0.5s;\n  width: 290px;\n  height: 435px;\n\n  &:hover {\n    transform: scale(0.95);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { Img } from './TradingMovies.styled';\n\nexport default function TrandingMovies({ movies }) {\n  return movies.map(({ id, title, poster_path }) => {\n    return (\n      <li key={id}>\n        <Link to={`/movies/${id}`}>\n          <div>\n            <Img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n          </div>\n          <div>\n            <h2>{title}</h2>\n          </div>\n        </Link>\n      </li>\n    );\n  });\n}\n\nTrandingMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { getTranding } from 'api/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport TrandingMovies from 'components/TrandingMovies';\nimport Loader from 'components/Loader';\n\nimport { List } from '../pages.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTranding()\n      .then(r => {\n        setMovies([...r]);\n      })\n      .catch(e => {\n        setError(e.message);\n        if (error !== null) {\n          toast.error(`Ошибка ${error}`, {\n            autoClose: 1000,\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  }, [error]);\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ToastContainer />\n        {isLoading && <Loader />}\n        <h1>Trending films</h1>\n        <List>\n          <TrandingMovies movies={movies} />\n        </List>\n      </Suspense>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 290px);\n  justify-content: center;\n  gap: 13px;\n`;\n\nexport const Img = styled.img`\n  transition: transform 0.5s;\n  width: 290px;\n  height: 435px;\n\n  &:hover {\n    transform: scale(0.95);\n  }\n`;\n"],"names":["API_KEY","BASE_URL","getTranding","axios","then","r","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Loader","className","height","width","color","wrapperStyle","wrapperClass","wrapperClassName","visible","Img","styled","TrandingMovies","movies","map","id","title","poster_path","to","src","alt","Home","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","catch","e","message","toast","autoClose","finally","Suspense","fallback","List"],"sourceRoot":""}