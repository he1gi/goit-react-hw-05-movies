{"version":3,"file":"static/js/264.d7c396e5.chunk.js","mappings":"sRAEMA,EAAU,mCACVC,EAAW,gCAEV,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,sCACyCD,IAC7CI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASC,EAAYC,GAC1B,OAAON,EAAAA,EAAAA,IAAA,UAEAF,EAFA,gCAEgCD,EAFhC,iCAEgES,EAFhE,gCAIJL,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBU,EADpB,oBACuCX,EADvC,oBAEJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GACV,CAEM,SAASM,EAAgBD,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,oBAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKO,IAAX,GACV,CAEM,SAASC,EAAgBH,GAC9B,OAAOR,EAAAA,EAAAA,IAAA,UAEAF,EAFA,iBAEiBU,EAFjB,4BAE4CX,EAF5C,2BAIJI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,GACV,C,kICrCc,SAASQ,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,uCAAeD,MACf,uBAAIC,MAFGF,EAKZ,KAGN,CCPc,SAASG,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,QAeR,OAbAgB,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAgBH,GACbP,KAAKmB,GACLK,OAAM,SAAAC,GACLJ,EAASI,EAAEC,SACG,OAAVN,GACFO,EAAAA,GAAAA,MAAA,+CAAsBP,GAAS,CAC7BQ,UAAW,KAGhB,GACJ,GAAE,CAACrB,EAASa,KAGX,+BACE,UAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,WACE,SAAC,KAAD,KACA,mDACoB,IAAnBlB,EAAQmB,QACP,SAAC,EAAD,CAAYnB,QAASA,KAErB,6DAKT,C","sources":["api/api.js","components/ReviewInfo/ReviewInfo.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '126685e3c97a05ce8ea69747c86f816b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport function getTranding() {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n}\n\nexport function searchMovie(query) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(r => r.data.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(r => r.data);\n}\n\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r.data.cast);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n}\n","import PropTypes from 'prop-types';\n\nexport default function ReviewsInfo({ reviews }) {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h3>Nickname: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nReviewsInfo.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { getMovieReviews } from 'api/api';\n\nimport ReviewInfo from 'components/ReviewInfo';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setReviews)\n      .catch(e => {\n        setError(e.message);\n        if (error !== null) {\n          toast.error(`Ошибка ${error}`, {\n            autoClose: 1000,\n          });\n        }\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ToastContainer />\n        <h2>Additional Information</h2>\n        {reviews.length !== 0 ? (\n          <ReviewInfo reviews={reviews} />\n        ) : (\n          <h1>No information about Reviews</h1>\n        )}\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","getTranding","axios","then","r","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","ReviewsInfo","reviews","map","id","author","content","Reviews","useState","setReviews","error","setError","useParams","useEffect","catch","e","message","toast","autoClose","Suspense","fallback","length"],"sourceRoot":""}